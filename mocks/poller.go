// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/blackhatbrigade/gomessagestore (interfaces: Poller)

// Package mock_gomessagestore is a generated GoMock package.
package mock_gomessagestore

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPoller is a mock of Poller interface
type MockPoller struct {
	ctrl     *gomock.Controller
	recorder *MockPollerMockRecorder
}

// MockPollerMockRecorder is the mock recorder for MockPoller
type MockPollerMockRecorder struct {
	mock *MockPoller
}

// NewMockPoller creates a new mock instance
func NewMockPoller(ctrl *gomock.Controller) *MockPoller {
	mock := &MockPoller{ctrl: ctrl}
	mock.recorder = &MockPollerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPoller) EXPECT() *MockPollerMockRecorder {
	return m.recorder
}

// Poll mocks base method
func (m *MockPoller) Poll(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Poll", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Poll indicates an expected call of Poll
func (mr *MockPollerMockRecorder) Poll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Poll", reflect.TypeOf((*MockPoller)(nil).Poll), arg0)
}
