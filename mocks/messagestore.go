// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/blackhatbrigade/gomessagestore (interfaces: MessageStore)

// Package mock_gomessagestore is a generated GoMock package.
package mock_gomessagestore

import (
	context "context"
	gomessagestore "github.com/blackhatbrigade/gomessagestore"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMessageStore is a mock of MessageStore interface
type MockMessageStore struct {
	ctrl     *gomock.Controller
	recorder *MockMessageStoreMockRecorder
}

// MockMessageStoreMockRecorder is the mock recorder for MockMessageStore
type MockMessageStoreMockRecorder struct {
	mock *MockMessageStore
}

// NewMockMessageStore creates a new mock instance
func NewMockMessageStore(ctrl *gomock.Controller) *MockMessageStore {
	mock := &MockMessageStore{ctrl: ctrl}
	mock.recorder = &MockMessageStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessageStore) EXPECT() *MockMessageStoreMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockMessageStore) Write(arg0 context.Context, arg1 gomessagestore.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockMessageStoreMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockMessageStore)(nil).Write), arg0, arg1)
}
